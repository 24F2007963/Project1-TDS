{
  "source": "tools-in-data-science-public\\uv.md",
  "type": "course",
  "text": "## Python tools: uv\n\n[Install uv](https://docs.astral.sh/uv/getting-started/installation/).\n\n[`uv`](https://docs.astral.sh/uv/) is a fast Python package and project manager that's becoming the standard for running Python scripts. It replaces tools like pip, conda, pipx, poetry, pyenv, twine, and virtualenv into one, enabling:\n\n- **Python Version Management**: uv installs and manages _multiple_ Python versions, allowing developers to specify and switch between versions seamlessly.\n- **Virtual Environment Handling**: It automates the creation and management of virtual environments, ensuring isolated and consistent development spaces for different projects.\n- **Dependency Management**: With support for the pyproject.toml format, uv enables precise specification of project dependencies. It maintains a universal lockfile, uv.lock, to ensure reproducible installations across different systems.\n- **Project Execution**: The `uv run` command allows for the execution of scripts and applications within the managed environment, streamlining development workflows.\n\nHere are some commonly used commands:\n\n```bash\n# Replace python with uv. This automatically installs Python and dependencies.\nuv run script.py\n\n# Run a Python script directly from the Internet\nuv run https://example.com/script.py\n\n# Run a Python script without installing\nuvx ruff\n\n# Use a specific Python version\nuv run --python 3.11 script.py\n\n# Add dependencies to your script\nuv add httpx --script script.py\n\n# Create a virtual environment at .venv\nuv venv\n\n# Install packages to your virtual environment\nuv pip install httpx\n```\n\nHere are some useful tools you can run with `uvx` without installation:\n\n```bash\nuvx --from jupyterlab jupyter-lab   # Jupyter notebook\nuvx marimo      # Interactive notebook\nuvx llm         # Chat with LLMs from the command line\nuvx openwebui   # Chat with LLMs via the browser\nuvx httpie      # Make HTTP requests\nuvx datasette   # Browse SQLite databases\nuvx markitdown  # Convert PDF to Markdown\nuvx yt-dlp      # Download YouTube videos\nuvx asciinema   # Record your terminal and play it\n```\n\nuv uses [inline script metadata](https://packaging.python.org/en/latest/specifications/inline-script-metadata/#inline-script-metadata) for dependencies.\nThe eliminates the need for `requirements.txt` or virtual environments. For example:\n\n```python\n# /// script\n# requires-python = \">=3.11\"\n# dependencies = [\n#   \"httpx\",\n#   \"pandas\",\n# ]\n# ///\n```\n\n[![uv - Python package and project management | Inline Script Metadata (28 min)](https://i.ytimg.com/vi_webp/igWlYl3asKw/sddefault.webp)](https://youtu.be/igWlYl3asKw?t=1240)\n\n<!-- Assessment: Share output of `uv run --with httpie -- https https://httpbin.org/get?email={email}` -->\n<!-- Assessment: Share output of `uvx markitdown {email}.pdf` -->\n<!-- Assessment: Share output of `uv ruff format script.py` -->\n"
}