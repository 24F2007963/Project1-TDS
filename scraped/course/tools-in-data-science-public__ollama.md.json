{
  "source": "tools-in-data-science-public\\ollama.md",
  "type": "course",
  "text": "## Local LLM Runner: Ollama\n\n[`ollama`](https://github.com/ollama/ollama) is a command-line tool for running open-source large language models entirely on your own machine\u2014no API keys, no vendor lock-in, full control over models and performance.\n\n[![Run AI Models Locally: Ollama Tutorial (Step-by-Step Guide + WebUI)](https://i.ytimg.com/vi_webp/Lb5D892-2HY/sddefault.webp)](https://youtu.be/Lb5D892-2HY)\n\n### Basic Usage\n\n[Download Ollama for macOS, Linux, or Windows](https://ollama.com/) and add the binary to your `PATH`. See the full [Docs \u2197](https://ollama.com/docs) for installation details and troubleshooting.\n\n```bash\n# List installed and available models\nollama list\n\n# Download/pin a specific model version\nollama pull gemma3:1b-it-qat\n\n# Run a one-off prompt\nollama run gemma3:1b-it-qat 'Write a haiku about data visualization'\n\n# Launch a persistent HTTP API on port 11434\nollama serve\n\n# Interact programmatically over HTTP\ncurl -X POST http://localhost:11434/api/chat \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"model\":\"gemma3:1b-it-qat\",\"prompt\":\"Hello, world!\"}'\n```\n\n### Key Features\n\n- **Model management**: `list`/`pull` \u2014 Install and switch among Llama 3.3, DeepSeek-R1, Gemma 3, Mistral, Phi-4, and more.\n- **Local inference**: `run` \u2014 Execute prompts entirely on-device for privacy and zero latency beyond hardware limits.\n- **Persistent server**: `serve` \u2014 Expose a local REST API for multi-session chats and integration into scripts or apps.\n- **Version pinning**: `pull model:tag` \u2014 Pin exact model versions for reproducible demos and experiments.\n- **Resource control**: `--threads` / `--context` \u2014 Tune CPU/GPU usage and maximum context window for performance and memory management.\n\n### Real-World Use Cases\n\n- **Quick prototyping**. Brainstorm slide decks or blog outlines offline, without worrying about API quotas: `ollama run gemma-3 'Outline a slide deck on Agile best practices'`\n- **Data privacy**. Summarize sensitive documents on-device, retaining full control of your data: `cat financial_report.pdf | ollama run phi-4 'Summarize the key findings'`\n- **CI/CD integration**. Validate PR descriptions or test YAML configurations in your pipeline without incurring API costs: `git diff origin/main | ollama run llama2 'Check for style and clarity issues'`\n- **Local app embedding**. Power a desktop or web app via the local REST API for instant LLM features: `curl -X POST http://localhost:11434/api/chat -d '{\"model\":\"mistral\",\"prompt\":\"Translate to German\"}'`\n\nRead the full [Ollama docs \u2197](https://github.com/ollama/ollama/tree/main/docs) for advanced topics like custom model hosting, GPU tuning, and integrating with your development workflows.\n"
}